package cup.aug;
import java_cup.runtime.*;
import cup.aug.Lexer;
import java.io.IOException;
import java.io.File;
import java.io.FileInputStream;
import java.lang.Object;
import java.util.*;

parser code {:
  protected static Lexer lexer;
  /*private HashMap<String,Integer> symT;*/
  
  public static void main(String... args) {
  	Parser p = new Parser(lexer);
  	try {
  		p.parse();
  	} catch (Exception e) {
  		e.printStackTrace();
  	}
  	
  }
:}

/* define how to connect to the scanner! */
init with {:
	ComplexSymbolFactory f = new ComplexSymbolFactory();
  	symbolFactory = f;
  	File file = new File("input.txt");
  	FileInputStream fis = null;
  	try {
    	fis = new FileInputStream(file);
  	} catch (IOException e) {
    	e.printStackTrace();
  	} 
  	lexer = new Lexer(f, fis);
  	/*symT = new HashMap<String,Integer>();*/
:};
scan with {: return lexer.next_token(); :};


terminal String     OPEN_TAG, CLOSED_TAG, CLOSING_TAG;

non terminal Object      tag;

tag ::= OPEN_TAG:o tag CLOSED_TAG:c tag			{: System.err.println("Double_trouble: <" + o + "> <" + c + ">"); :}
        | CLOSING_TAG:t tag             {: System.err.println("Closed_Tag: <" + t + ">"); :}
        | {: System.err.println("GRAMMATIKS: <>"); :};